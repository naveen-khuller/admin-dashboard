pipeline {
  agent {
    docker {
      image 'naveenkhuller/admin-dashboard:latest'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        git branch: 'master', url: 'https://github.com/naveen-khuller/admin-dashboard.git'
      }
    }
    stage('Install dependencies') {
            steps {
                // Install Node.js dependencies using npm or yarn
                sh 'npm install' // or 'yarn install'
            }
        }

    stage('Build') {
            steps {
                // Build the React app
                sh 'npm run build' // or 'yarn build'
            }
      }

    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://18.204.6.121:9000/"
      }
      steps {
    withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
            sh 'npm install -g sonarqube-scanner' // Install SonarQube Scanner for Node.js globally (if not installed)
            sh 'sonar-scanner -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}' // Execute SonarQube analysis
    }
}

    }
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "naveenkhuller/admin-dashboard:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
                    // Build the Docker image
                    sh "docker build -t ${DOCKER_IMAGE} ."
                    
                    // Push the Docker image to Docker Hub (assuming it's already logged in)
                    sh "docker push ${DOCKER_IMAGE}"
                }
      }
    }
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "admin-dashboard"
            GIT_USER_NAME = "naveen-khuller"
        }
        steps {
            withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                    git config user.email "naveenkhuller@gmail.com"
                    git config user.name "Naveen Khuller"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" deployment.yml
                    git add deployment.yml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}